input {
  lumberjack {
    codec => json
    port => 5000
    type => "json"
    ssl_certificate => "/tmp/certs/jerry.crt"
    ssl_key => "/tmp/certs/jerry.key"
  }
}
filter {
  # Rewrite the @timestamp field from the time field in the Docker logs.
  date {
    match => [ "time", "ISO8601", "yyyy-MM-dd'T'HH:mm:ss.SSSSSSSSS'Z'" ]
  }
  # Extract the container id from the file that we're following.
  grok {
    match => [ "file", "/tmp/dockerlogs/%{BASE16NUM:container}" ]
    match => [ "file", "/tmp/activitylogs/%{BASE16NUM:container}-json.log" ]
  }
  # The next two filters overwrite the host field with the first 12
  # characters of the Docker container id.
  grok {
    match => ["container", "(?<container_short>.{12})"]
  }
  mutate {
    rename => [ "container_short", "host" ]
  }
  <%= ENV['LOGSTASH_FILTERS'] || "" %>
}
output {
  <%=
    # The block is only called if there is a match, which ensures we crash
    # if __LOAD_SCRIPT_SHA__ was provided but not LOAD_SCRIPT_SHA, but proceed
    # without error if __LOAD_SCRIPT_SHA__ was not provided.
    (ENV['LOGSTASH_OUTPUT_CONFIG'] || "stdout { codec => rubydebug }")
    .gsub('__LOAD_SCRIPT_SHA__') { |_| ENV.fetch('LOAD_SCRIPT_SHA') }
  %>
}
